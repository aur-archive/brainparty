From 29e36e5c02e83479c1d638e7030324d0d4c4c46b Mon Sep 17 00:00:00 2001
From: gonzalez_david <david.gonzalez0005@gmail.com>
Date: Sun, 21 Sep 2014 15:02:22 +0200
Subject: [PATCH 1/2] correct compile error

---
 brainparty/BPGame.cpp             | 4 ++--
 brainparty/BPList.h               | 2 +-
 brainparty/SpriteFont.cpp         | 2 +-
 brainparty/balloonblaster.cpp     | 2 +-
 brainparty/bombhunt.cpp           | 2 +-
 brainparty/bpsays.cpp             | 4 ++--
 brainparty/bubbletrouble.cpp      | 4 ++--
 brainparty/cardmatch.cpp          | 4 ++--
 brainparty/connex.cpp             | 2 +-
 brainparty/cupsnballs.cpp         | 4 ++--
 brainparty/diceoff.cpp            | 4 ++--
 brainparty/flashcounting.cpp      | 6 +++---
 brainparty/flashlight.cpp         | 6 +++---
 brainparty/jewelflip.cpp          | 4 ++--
 brainparty/jeweljam.cpp           | 4 ++--
 brainparty/marbledrop.cpp         | 2 +-
 brainparty/memoryblox.cpp         | 2 +-
 brainparty/memorybox.cpp          | 4 ++--
 brainparty/memorymaths.cpp        | 4 ++--
 brainparty/minesweep.cpp          | 4 ++--
 brainparty/moonjump.cpp           | 2 +-
 brainparty/oddoneout.cpp          | 8 ++++----
 brainparty/patchmatch.cpp         | 2 +-
 brainparty/perfectpaths.cpp       | 8 ++++----
 brainparty/rps.cpp                | 2 +-
 brainparty/scrambled.cpp          | 2 +-
 brainparty/setfinder.cpp          | 2 +-
 brainparty/sharpshooter.cpp       | 4 ++--
 brainparty/shortcircuitsudoku.cpp | 4 ++--
 brainparty/shufflepuzzler.cpp     | 4 ++--
 brainparty/strangerdanger.cpp     | 6 +++---
 brainparty/symboliclogic.cpp      | 6 +++---
 brainparty/underthehat.cpp        | 4 ++--
 brainparty/untangler.cpp          | 6 +++---
 34 files changed, 65 insertions(+), 65 deletions(-)

diff --git a/brainparty/BPGame.cpp b/brainparty/BPGame.cpp
index 03a7846..aa2c7b2 100644
--- a/brainparty/BPGame.cpp
+++ b/brainparty/BPGame.cpp
@@ -1926,7 +1926,7 @@ void BPGame::CalculateTestResults() {
 	}
 	
 	// now prepare the results screen
-	TestResultContainers.Clear();
+	TestResultContainers.Clear(true);
 	
 	for (int i = 0; i < TestMiniGames.Count; ++i) {
 		TestResultContainer* result = new TestResultContainer();
@@ -2241,7 +2241,7 @@ void BPGame::PositionPractiseGames() {
 		if (i >= PractisePageNumber + 9) break;
 	}
 	
-	PractisePositions.Clear();
+	PractisePositions.Clear(true);
 }
 
 void BPGame::RunTest() {
diff --git a/brainparty/BPList.h b/brainparty/BPList.h
index 5c986cb..10ff6cb 100644
--- a/brainparty/BPList.h
+++ b/brainparty/BPList.h
@@ -171,7 +171,7 @@ bool BPPList<T>::Contains(T item) {
 }
 
 template <class T>
-void BPPList<T>::Clear(bool safe_delete = true) {
+void BPPList<T>::Clear(bool safe_delete) {
 	if (safe_delete) {
 		for (int i = data.size() - 1; i >= 0; --i) {
 			T item = data[i];
diff --git a/brainparty/SpriteFont.cpp b/brainparty/SpriteFont.cpp
index a027068..a784fb2 100644
--- a/brainparty/SpriteFont.cpp
+++ b/brainparty/SpriteFont.cpp
@@ -22,7 +22,7 @@ SpriteFont::SpriteFont() {
 }
 
 SpriteFont::~SpriteFont() {
-	Surfaces.Clear();
+	Surfaces.Clear(true);
 }
 
 void SpriteFont::drawAtPoint(float x, float y) {
diff --git a/brainparty/balloonblaster.cpp b/brainparty/balloonblaster.cpp
index b77aaea..c5a45c0 100644
--- a/brainparty/balloonblaster.cpp
+++ b/brainparty/balloonblaster.cpp
@@ -91,7 +91,7 @@ BPMiniGame_BalloonBlaster::~BPMiniGame_BalloonBlaster() {
 	SAFE_DELETE(sfcScoreStr);
 	SAFE_DELETE(sfcClock);
 	
-	BalloonTypes->Clear();
+	BalloonTypes->Clear(true);
 	SAFE_DELETE(BalloonTypes);
 }
 
diff --git a/brainparty/bombhunt.cpp b/brainparty/bombhunt.cpp
index c9b4b42..396e081 100644
--- a/brainparty/bombhunt.cpp
+++ b/brainparty/bombhunt.cpp
@@ -63,7 +63,7 @@ BPMiniGame_BombHunt::~BPMiniGame_BombHunt() {
 	SAFE_DELETE(sfcGuessesLeft);
 	
 	BombItems.Clear(false);
-	Components.Clear();
+	Components.Clear(true);
 }
 
 void BPMiniGame_BombHunt::Start() {
diff --git a/brainparty/bpsays.cpp b/brainparty/bpsays.cpp
index 7691796..f410379 100644
--- a/brainparty/bpsays.cpp
+++ b/brainparty/bpsays.cpp
@@ -66,12 +66,12 @@ BPMiniGame_BPSays::~BPMiniGame_BPSays() {
 	SAFE_DELETE(sfcBackgroundChoosing);
 	SAFE_DELETE(sfcCircle);
 	
-	ColourWords.Clear();
 	
+	ColourWords.Clear(true);
 	Sequence->Clear();
 	SAFE_DELETE(Sequence);
 	
-	Numbers->Clear();
+	Numbers->Clear(true);
 	SAFE_DELETE(Numbers);
 }
 
diff --git a/brainparty/bubbletrouble.cpp b/brainparty/bubbletrouble.cpp
index 1925ba7..1c7567d 100644
--- a/brainparty/bubbletrouble.cpp
+++ b/brainparty/bubbletrouble.cpp
@@ -61,10 +61,10 @@ BPMiniGame_BubbleTrouble::~BPMiniGame_BubbleTrouble() {
 	SAFE_DELETE(sfcBackground);
 	SAFE_DELETE(sfcRedCross);
 	
-	BubbleTypes.Clear();
 	
-	Bubbles.Clear();
 	
+	BubbleTypes.Clear(true);
+	Bubbles.Clear(true);
 	Directions.Clear();
 }
 
diff --git a/brainparty/cardmatch.cpp b/brainparty/cardmatch.cpp
index 8c40850..aa0b189 100644
--- a/brainparty/cardmatch.cpp
+++ b/brainparty/cardmatch.cpp
@@ -78,10 +78,10 @@ BPMiniGame_CardMatch::~BPMiniGame_CardMatch() {
 	SAFE_DELETE(sfcBackground);
 	SAFE_DELETE(sfcCardBack);
 	
-	CardTypes->Clear();
+	CardTypes->Clear(true);
 	SAFE_DELETE(CardTypes);
 	
-	Cards->Clear();
+	Cards->Clear(true);
 	SAFE_DELETE(Cards);
 }
 
diff --git a/brainparty/connex.cpp b/brainparty/connex.cpp
index a81f814..863de5f 100644
--- a/brainparty/connex.cpp
+++ b/brainparty/connex.cpp
@@ -91,7 +91,7 @@ BPMiniGame_Connex::~BPMiniGame_Connex() {
 	Letters->Clear();
 	SAFE_DELETE(Letters);
 	
-	Objects->Clear();
+	Objects->Clear(true);
 	SAFE_DELETE(Objects);
 }
 
diff --git a/brainparty/cupsnballs.cpp b/brainparty/cupsnballs.cpp
index ff07553..f8d7707 100644
--- a/brainparty/cupsnballs.cpp
+++ b/brainparty/cupsnballs.cpp
@@ -71,8 +71,8 @@ BPMiniGame_CupsNBalls::~BPMiniGame_CupsNBalls() {
 	SAFE_DELETE(sfcScore);
 	SAFE_DELETE(sfcAmmo);
 	
-	Balls.Clear();
-	Cups.Clear();
+	Balls.Clear(true);
+	Cups.Clear(true);
 }
 
 void BPMiniGame_CupsNBalls::Start() {
diff --git a/brainparty/diceoff.cpp b/brainparty/diceoff.cpp
index 1eca54c..12a6a7d 100644
--- a/brainparty/diceoff.cpp
+++ b/brainparty/diceoff.cpp
@@ -61,8 +61,8 @@ BPMiniGame_DiceOff::BPMiniGame_DiceOff(BPGame* game) : BPMiniGame(game) {
 }
 
 BPMiniGame_DiceOff::~BPMiniGame_DiceOff() {
-	DicePics.Clear();
-	Dice.Clear();
+	DicePics.Clear(true);
+	Dice.Clear(true);
 }
 
 void BPMiniGame_DiceOff::Start() {
diff --git a/brainparty/flashcounting.cpp b/brainparty/flashcounting.cpp
index 84590a2..4d45ff8 100644
--- a/brainparty/flashcounting.cpp
+++ b/brainparty/flashcounting.cpp
@@ -61,10 +61,10 @@ BPMiniGame_FlashCounting::BPMiniGame_FlashCounting(BPGame* game) : BPMiniGame(ga
 BPMiniGame_FlashCounting::~BPMiniGame_FlashCounting() {
 	SAFE_DELETE(sfcBackground);
 	
-	Balls->Clear();
+	Balls->Clear(true);
 	SAFE_DELETE(Balls);
 	
-	BallPics->Clear();
+	BallPics->Clear(true);
 	SAFE_DELETE(BallPics);
 	
 	BallIDs->Clear();
@@ -209,7 +209,7 @@ void BPMiniGame_FlashCounting::LevelUp() {
 	++CurrentLevel;
 	BallDirCount = 0;
 	
-	Balls->Clear();
+	Balls->Clear(true);
 	BallIDs->Shuffle();
 	
 	Answer = (*BallIDs)[0];
diff --git a/brainparty/flashlight.cpp b/brainparty/flashlight.cpp
index 0e54e14..b681948 100644
--- a/brainparty/flashlight.cpp
+++ b/brainparty/flashlight.cpp
@@ -55,8 +55,8 @@ BPMiniGame_Flashlight::~BPMiniGame_Flashlight() {
 	SAFE_DELETE(sfcLightOn);
 	SAFE_DELETE(sfcLightOff);
 	
-	Positions.Clear();
-	Lights.Clear();
+	Positions.Clear(true);
+	Lights.Clear(true);
 }
 
 void BPMiniGame_Flashlight::ShowLayout() {
@@ -111,7 +111,7 @@ void BPMiniGame_Flashlight::ShowLayout() {
 			break;
 	}
 	
-	Lights.Clear();
+	Lights.Clear(true);
 	
 	for (int i = 0; i < numlights; ++i) {
 		BPMiniGame_Flashlight_Light* light = new BPMiniGame_Flashlight_Light();
diff --git a/brainparty/jewelflip.cpp b/brainparty/jewelflip.cpp
index fe2a4e3..a87c81e 100644
--- a/brainparty/jewelflip.cpp
+++ b/brainparty/jewelflip.cpp
@@ -78,9 +78,9 @@ BPMiniGame_JewelFlip::~BPMiniGame_JewelFlip() {
 	SAFE_DELETE(sfcBottomBar);
 	SAFE_DELETE(sfcSelected);
 	
-	GemTypes.Clear();
+	GemTypes.Clear(true);
 	
-	Gems.Clear();
+	Gems.Clear(true);
 	
 	SAFE_DELETE(SelectedGem);
 	
diff --git a/brainparty/jeweljam.cpp b/brainparty/jeweljam.cpp
index 79f3051..44d72a1 100644
--- a/brainparty/jeweljam.cpp
+++ b/brainparty/jeweljam.cpp
@@ -92,8 +92,8 @@ BPMiniGame_JewelJam::~BPMiniGame_JewelJam() {
 	
 	Boxes.clear();
 	
-	ColoursLo.Clear();
-	ColoursHi.Clear();
+	ColoursLo.Clear(true);
+	ColoursHi.Clear(true);
 	
 	if (SelectedRow != NULL) {
 		// shouldn't have to do this, because it's just pointers to things that have already been deleted
diff --git a/brainparty/marbledrop.cpp b/brainparty/marbledrop.cpp
index 3b47a4d..afa558c 100644
--- a/brainparty/marbledrop.cpp
+++ b/brainparty/marbledrop.cpp
@@ -43,7 +43,7 @@ BPMiniGame_MarbleDrop::BPMiniGame_MarbleDrop(BPGame* game) : BPMiniGame(game) {
 
 BPMiniGame_MarbleDrop::~BPMiniGame_MarbleDrop() {
 	SAFE_DELETE(sfcBackground);
-	MarbleTypes.Clear();
+	MarbleTypes.Clear(true);
 	MarbleOrder.Clear();
 	OriginalFirstCol.Clear();
 	OriginalSecondCol.Clear();
diff --git a/brainparty/memoryblox.cpp b/brainparty/memoryblox.cpp
index 680773c..26ca8d6 100644
--- a/brainparty/memoryblox.cpp
+++ b/brainparty/memoryblox.cpp
@@ -62,7 +62,7 @@ BPMiniGame_MemoryBlox::BPMiniGame_MemoryBlox(BPGame* game) : BPMiniGame(game) {
 }
 
 BPMiniGame_MemoryBlox::~BPMiniGame_MemoryBlox() {
-	TileSet.Clear();
+	TileSet.Clear(true);
 	SAFE_DELETE(sfcBackground);
 	SAFE_DELETE(sfcRed);
 	SAFE_DELETE(sfcBlue);
diff --git a/brainparty/memorybox.cpp b/brainparty/memorybox.cpp
index 38bac19..fe12001 100644
--- a/brainparty/memorybox.cpp
+++ b/brainparty/memorybox.cpp
@@ -106,7 +106,7 @@ BPMiniGame_MemoryBox::~BPMiniGame_MemoryBox() {
 	Numbers.clear();
 
 	Layouts.clear();
-	ActiveBoxes.Clear();
+	ActiveBoxes.Clear(true);
 }
 
 void BPMiniGame_MemoryBox::Start() {
@@ -245,7 +245,7 @@ void BPMiniGame_MemoryBox::GenerateBoxes() {
 	ShowDelay += 155;
 	++NumTries;
 	
-	ActiveBoxes.Clear();
+	ActiveBoxes.Clear(true);
 	
 	// the level count is stored as a float so we can add 0.5 each success and go up a level every two successes
 	int ilevel = floor(Level);
diff --git a/brainparty/memorymaths.cpp b/brainparty/memorymaths.cpp
index 4a61669..ae2ecd0 100644
--- a/brainparty/memorymaths.cpp
+++ b/brainparty/memorymaths.cpp
@@ -81,12 +81,12 @@ BPMiniGame_MemoryMaths::BPMiniGame_MemoryMaths(BPGame* game) : BPMiniGame(game)
 BPMiniGame_MemoryMaths::~BPMiniGame_MemoryMaths() {
 	SAFE_DELETE(sfcBackground);
 	SAFE_DELETE(sfcRemember);
-	Food.Clear();
+	Food.Clear(true);
 	Numbers.Clear();
 	FoodNumbers.Clear();
 	EquationFood.Clear();
 	EquationOps.Clear();
-	sfcNumbers.Clear();
+	sfcNumbers.Clear(true);
 	
 	for(map<const char*, SpriteFont*>::iterator it = sfcOperators.begin(); it != sfcOperators.end(); ++it) {
 		SAFE_DELETE(it->second);
diff --git a/brainparty/minesweep.cpp b/brainparty/minesweep.cpp
index 7aeea4b..a7adda5 100644
--- a/brainparty/minesweep.cpp
+++ b/brainparty/minesweep.cpp
@@ -39,11 +39,11 @@ BPMiniGame_MineSweep::~BPMiniGame_MineSweep() {
 	SAFE_DELETE(sfcBackground);
 	SAFE_DELETE(sfcTile);
 	SAFE_DELETE(sfcBombTile);
-	Tiles.Clear();
+	Tiles.Clear(true);
 }
 
 void BPMiniGame_MineSweep::GenerateMines() {
-	Tiles.Clear();
+	Tiles.Clear(true);
 	
 	BPMiniGame_MineSweep_Tile* tile;
 	
diff --git a/brainparty/moonjump.cpp b/brainparty/moonjump.cpp
index 7300e8a..27e9e4c 100644
--- a/brainparty/moonjump.cpp
+++ b/brainparty/moonjump.cpp
@@ -53,7 +53,7 @@ BPMiniGame_MoonJump::~BPMiniGame_MoonJump() {
 	SAFE_DELETE(sfcSheepLeft);
 	SAFE_DELETE(sfcSheepRight);
 	
-	Sheep.Clear();
+	Sheep.Clear(true);
 }
 
 void BPMiniGame_MoonJump::Start() {	
diff --git a/brainparty/oddoneout.cpp b/brainparty/oddoneout.cpp
index 3d823e9..884566f 100644
--- a/brainparty/oddoneout.cpp
+++ b/brainparty/oddoneout.cpp
@@ -50,9 +50,9 @@ BPMiniGame_OddOneOut::BPMiniGame_OddOneOut(BPGame* game) : BPMiniGame(game) {
 
 BPMiniGame_OddOneOut::~BPMiniGame_OddOneOut() {
 	SAFE_DELETE(sfcBackground);
-	CardTypes.Clear();
-	Coordinates.Clear();
-	Items.Clear();
+	CardTypes.Clear(true);
+	Coordinates.Clear(true);
+	Items.Clear(true);
 }
 
 void BPMiniGame_OddOneOut::Start() {
@@ -185,7 +185,7 @@ void BPMiniGame_OddOneOut::CreateLevel() {
 }
 
 void BPMiniGame_OddOneOut::GenerateLayout(int num) {
-	Items.Clear();
+	Items.Clear(true);
 	CardTypes.Shuffle();
 	Coordinates.Shuffle();
 	
diff --git a/brainparty/patchmatch.cpp b/brainparty/patchmatch.cpp
index d51ef3e..1a6f080 100644
--- a/brainparty/patchmatch.cpp
+++ b/brainparty/patchmatch.cpp
@@ -82,7 +82,7 @@ BPMiniGame_PatchMatch::~BPMiniGame_PatchMatch() {
 	
 	Boxes.clear();
 	
-	PatchPictures.Clear();
+	PatchPictures.Clear(true);
 		
 	SAFE_DELETE(sfcScoreStr);
 	SAFE_DELETE(sfcClock);
diff --git a/brainparty/perfectpaths.cpp b/brainparty/perfectpaths.cpp
index 75e4546..50234a7 100644
--- a/brainparty/perfectpaths.cpp
+++ b/brainparty/perfectpaths.cpp
@@ -65,16 +65,16 @@ BPMiniGame_PerfectPaths::~BPMiniGame_PerfectPaths() {
 	SAFE_DELETE(sfcBackground);
 	StartPositions.Clear();
 	EndPositions.Clear();
-	LoNumbers.Clear();
-	HiNumbers.Clear();
+	LoNumbers.Clear(true);
+	HiNumbers.Clear(true);
 //	SAFE_DELETE(StartPos);
 //	SAFE_DELETE(EndPos);
 	
 	SAFE_DELETE(sfcPerfect);
 	SAFE_DELETE(sfcOK);
 	
-	Squares.Clear();
 	
+	Squares.Clear(true);
 	SAFE_DELETE(sfcScore);
 }
 
@@ -242,7 +242,7 @@ void BPMiniGame_PerfectPaths::LevelUp() {
 		return;
 	}
 	
-	Squares.Clear();
+	Squares.Clear(true);
 	Moves.Clear();
 	MoveSquares.Clear();
 	
diff --git a/brainparty/rps.cpp b/brainparty/rps.cpp
index 6e07f3b..6842508 100644
--- a/brainparty/rps.cpp
+++ b/brainparty/rps.cpp
@@ -54,7 +54,7 @@ BPMiniGame_RPS::~BPMiniGame_RPS() {
 	SAFE_DELETE(sfcPaper);
 	SAFE_DELETE(sfcScissors);
 	
-	Positions.Clear();
+	Positions.Clear(true);
 }
 
 void BPMiniGame_RPS::Play() {
diff --git a/brainparty/scrambled.cpp b/brainparty/scrambled.cpp
index 9ca25c3..139396f 100644
--- a/brainparty/scrambled.cpp
+++ b/brainparty/scrambled.cpp
@@ -202,7 +202,7 @@ BPMiniGame_Scrambled::BPMiniGame_Scrambled(BPGame* game) : BPMiniGame(game) {
 
 BPMiniGame_Scrambled::~BPMiniGame_Scrambled() {
 	SAFE_DELETE(sfcBackground);
-	Answers.Clear();
+	Answers.Clear(true);
 }
 
 void BPMiniGame_Scrambled::Start() {
diff --git a/brainparty/setfinder.cpp b/brainparty/setfinder.cpp
index 4039f04..335bef7 100644
--- a/brainparty/setfinder.cpp
+++ b/brainparty/setfinder.cpp
@@ -161,7 +161,7 @@ BPMiniGame_SetFinder::~BPMiniGame_SetFinder() {
 	
 	SAFE_DELETE(sfcClock);
 	
-	CurrentItems.Clear();
+	CurrentItems.Clear(true);
 }
 
 void BPMiniGame_SetFinder::Start() {
diff --git a/brainparty/sharpshooter.cpp b/brainparty/sharpshooter.cpp
index 7ac06cb..0a05def 100644
--- a/brainparty/sharpshooter.cpp
+++ b/brainparty/sharpshooter.cpp
@@ -56,8 +56,8 @@ BPMiniGame_Sharpshooter::~BPMiniGame_Sharpshooter() {
 	SAFE_DELETE(sfcTarget);
 	SAFE_DELETE(sfcDontShoot);
 	
-	Targets.Clear();
-	Positions.Clear();
+	Targets.Clear(true);
+	Positions.Clear(true);
 }
 
 void BPMiniGame_Sharpshooter::Start() {
diff --git a/brainparty/shortcircuitsudoku.cpp b/brainparty/shortcircuitsudoku.cpp
index 6a8a5d1..44caf49 100644
--- a/brainparty/shortcircuitsudoku.cpp
+++ b/brainparty/shortcircuitsudoku.cpp
@@ -38,7 +38,7 @@ BPMiniGame_ShortCircuitSudoku::BPMiniGame_ShortCircuitSudoku(BPGame* game) : BPM
 BPMiniGame_ShortCircuitSudoku::~BPMiniGame_ShortCircuitSudoku() {
 	SAFE_DELETE(sfcBackground);
 	
-	Sudoku.Clear();
+	Sudoku.Clear(true);
 	
 	SAFE_DELETE(sfcQuestionMark);
 }
@@ -176,7 +176,7 @@ void BPMiniGame_ShortCircuitSudoku::LevelUp() {
 }
 
 void BPMiniGame_ShortCircuitSudoku::GenerateGrid() {
-	Sudoku.Clear();
+	Sudoku.Clear(true);
 	SudokuSquare* Squares[81];
 	
 	for (int i = 0; i < 81; ++i) {
diff --git a/brainparty/shufflepuzzler.cpp b/brainparty/shufflepuzzler.cpp
index d2119c2..167e1bb 100644
--- a/brainparty/shufflepuzzler.cpp
+++ b/brainparty/shufflepuzzler.cpp
@@ -64,9 +64,9 @@ BPMiniGame_ShufflePuzzler::~BPMiniGame_ShufflePuzzler() {
 	SAFE_DELETE(sfcBackground);
 	SAFE_DELETE(sfcPicture);
 	
-	ImageBits.Clear();
-	Items.Clear();
 	
+	ImageBits.Clear(true);
+	Items.Clear(true);
 	SAFE_DELETE(sfcClock);
 }
 
diff --git a/brainparty/strangerdanger.cpp b/brainparty/strangerdanger.cpp
index 0da125f..da2d7a9 100644
--- a/brainparty/strangerdanger.cpp
+++ b/brainparty/strangerdanger.cpp
@@ -57,9 +57,9 @@ BPMiniGame_StrangerDanger::~BPMiniGame_StrangerDanger() {
 	SAFE_DELETE(sfcFlash);
 	SAFE_DELETE(sfcWhatsChanged);
 	
-	CardTypes.Clear();
-	Coordinates.Clear();
-	Items.Clear();
+	CardTypes.Clear(true);
+	Coordinates.Clear(true);
+	Items.Clear(true);
 }
 
 void BPMiniGame_StrangerDanger::Start() {
diff --git a/brainparty/symboliclogic.cpp b/brainparty/symboliclogic.cpp
index 57da421..ede24bf 100644
--- a/brainparty/symboliclogic.cpp
+++ b/brainparty/symboliclogic.cpp
@@ -88,9 +88,9 @@ BPMiniGame_SymbolicLogic::BPMiniGame_SymbolicLogic(BPGame* game) : BPMiniGame(ga
 BPMiniGame_SymbolicLogic::~BPMiniGame_SymbolicLogic() {
 	SAFE_DELETE(sfcBackground);
 	
-	LogicItems.Clear();
-	Premises.Clear();
 	
+	LogicItems.Clear(true);
+	Premises.Clear(true);
 	SAFE_DELETE(sfcText);
 }
 
@@ -224,7 +224,7 @@ void BPMiniGame_SymbolicLogic::LevelUp() {
 	LastStateChange = -1;
 	GameState = WAITING;
 		
-	Premises.Clear();
+	Premises.Clear(true);
 	LogicItems.Shuffle();
 	
 	BPMiniGame_SymbolicLogic_Premise* FirstPremise;
diff --git a/brainparty/underthehat.cpp b/brainparty/underthehat.cpp
index e293c21..c097224 100644
--- a/brainparty/underthehat.cpp
+++ b/brainparty/underthehat.cpp
@@ -81,8 +81,8 @@ BPMiniGame_UnderTheHat::~BPMiniGame_UnderTheHat() {
 	SAFE_DELETE(sfcBadHat);
 	SAFE_DELETE(sfcItem);
 	
-	Hats.Clear();
-	Points.Clear();
+	Hats.Clear(true);
+	Points.Clear(true);
 	
 	SAFE_DELETE(ChosenHat);
 	
diff --git a/brainparty/untangler.cpp b/brainparty/untangler.cpp
index 4ff0199..8d92f60 100644
--- a/brainparty/untangler.cpp
+++ b/brainparty/untangler.cpp
@@ -38,8 +38,8 @@ BPMiniGame_Untangler::BPMiniGame_Untangler(BPGame* game) : BPMiniGame(game) {
 }
 
 BPMiniGame_Untangler::~BPMiniGame_Untangler() {
-	TanglePoints.Clear();
-	Stars.Clear();
+	TanglePoints.Clear(true);
+	Stars.Clear(true);
 	
 	SAFE_DELETE(SelectedPoint);
 	
@@ -218,7 +218,7 @@ void BPMiniGame_Untangler::LevelUp() {
 	++CurrentLevel;
 	
 	do {	
-		TanglePoints.Clear();
+		TanglePoints.Clear(true);
 		
 		// first, add all the lines
 		for (int i = 0; i < CurrentLevel + 5; ++i) {
-- 
2.1.0


From 609832da71d91b838493dbf2db5a050c38b4d6fd Mon Sep 17 00:00:00 2001
From: gonzalez_david <david.gonzalez0005@gmail.com>
Date: Sun, 21 Sep 2014 15:05:40 +0200
Subject: [PATCH 2/2] correct compile error

---
 brainparty/strangerdanger.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/brainparty/strangerdanger.cpp b/brainparty/strangerdanger.cpp
index da2d7a9..ad9aee7 100644
--- a/brainparty/strangerdanger.cpp
+++ b/brainparty/strangerdanger.cpp
@@ -240,7 +240,7 @@ void BPMiniGame_StrangerDanger::CreateLevel() {
 		Success();
 	}
 
-	Items.Clear();
+	Items.Clear(true);
 	CardTypes.Shuffle();
 	Coordinates.Shuffle();
 	
-- 
2.1.0

